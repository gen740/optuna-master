version: 2

workflows:
  version: 2
  commit-build:
    jobs:
      - check
      - run-tests-python36
      - run-tests-python27
      - run-tests-python34
      - run-tests-python35
  daily-build:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - check
      - run-tests-python36
      - run-tests-python27
      - run-tests-python34
      - run-tests-python35
      - run-examples-python36
      - run-examples-python27
      - run-examples-python34
      - run-examples-python35

jobs:

  # Lint and static type checking

  check:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout

      - run: &install
          name: install
          command: |
            python -m venv venv || virtualenv venv
            . venv/bin/activate
            python setup.py sdist
            pip install $(ls dist/*.tar.gz)[testing]

      - run: &check-flake8
          name: flake8
          command: |
            . venv/bin/activate
            flake8 .

      - run: &check-mypy
          name: mypy
          command: |
            . venv/bin/activate
            mypy --ignore-missing-imports .
            mypy --py2 --ignore-missing-imports .

  # Unit tests

  run-tests-python36:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout

      - run: *install

      - run: &tests
          name: tests
          command: |
            . venv/bin/activate
            pytest tests

  run-tests-python27:
    docker:
      - image: circleci/python:2.7
    steps:
      [checkout, run: *install, run: *tests]

  run-tests-python34:
    docker:
      - image: circleci/python:3.4
    steps:
      [checkout, run: *install, run: *tests]

  run-tests-python35:
    docker:
      - image: circleci/python:3.5
    steps:
      [checkout, run: *install, run: *tests]

  # Examples

  run-examples-python36:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout

      - run: *install

      - run: &install-examples
          name: install
          command: |
            . venv/bin/activate
            pip install chainer scikit-learn

      - run: &examples
          name: run-examples
          command: |
            . venv/bin/activate
            for file in `find examples -name '*.py'`
            do
               python $file
            done

  run-examples-python27:
    docker:
      - image: circleci/python:2.7
    steps:
      [checkout, run: *install, run: *install-examples, run: *examples]

  run-examples-python34:
    docker:
      - image: circleci/python:3.4
    steps:
      [checkout, run: *install, run: *install-examples, run: *examples]

  run-examples-python35:
    docker:
      - image: circleci/python:3.5
    steps:
      [checkout, run: *install, run: *install-examples, run: *examples]
